{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6df83bdfa5674dad5408","webpack:///./src/index.js","webpack:///./src/reducers.js","webpack:///external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}","webpack:///./src/states.js","webpack:///./src/actions.js","webpack:///./src/utils.js","webpack:///./src/guard.js","webpack:///./src/auth.js","webpack:///external {\"root\":\"AWSCognito\",\"commonjs\":\"aws-cognito-sdk\",\"commonjs2\":\"aws-cognito-sdk\",\"amd\":\"aws-cognito-sdk\"}","webpack:///./src/attributes.js","webpack:///./src/policy.js","webpack:///./src/Login.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}","webpack:///./src/Logout.jsx","webpack:///./src/NewPasswordRequired.jsx","webpack:///./src/EmailVerification.jsx","webpack:///./src/PasswordReset.jsx","webpack:///./src/Confirm.jsx"],"names":["initial","user","state","LOGGED_OUT","error","userPool","attributes","creds","config","region","clientId","identityPool","configure","action","AWSCognito","pool","UserPoolId","ClientId","getCurrentUser","Object","assign","addAttributes","s","s2","cognito","type","AUTHENTICATED","LOGGING_IN","LOGGED_IN","MFA_REQUIRED","NEW_PASSWORD_REQUIRED","CONFIRMATION_REQUIRED","EMAIL_VERIFICATION_REQUIRED","CognitoState","Action","authenticated","loggingIn","login","logout","loginFailure","mfaRequired","newPasswordRequired","newPasswordRequiredFailure","emailVerificationRequired","emailVerificationFailed","beginPasswordResetFlow","finishPasswordResetFlow","updateAttributes","confirmationRequired","changePassword","oldPassword","newPassword","Promise","resolve","reject","err","result","message","buildLogins","username","jwtToken","loginDomain","loginUrl","IdentityPoolId","Logins","LoginId","testLoggedIn","wantLoggedIn","isLoggedIn","permitted","expr","loggedIn","undefined","guard","store","forbiddenUrl","routeState","replace","callback","getState","dest","then","allow","createGuard","emailVerificationFlow","required","refreshIdentityCredentials","logins","refresh","performLogin","getSession","session","getIdToken","getJwtToken","getUsername","authenticate","password","Username","Password","Pool","authenticateUser","onSuccess","onFailure","code","registerUser","signUp","userConfirmed","sendAttributeVerificationCode","attribute","getAttributeVerificationCode","inputVerificationCode","getUserAttributes","i","length","name","getName","value","getValue","mkAttrList","keys","map","Name","key","Value","attributeList","enable","f","subscribe","dispatch","email_verified","fetchAttributes","direct","identityPoolLogin","setupCognito","BaseLogin","cloneElement","props","children","onSubmit","mapStateToProps","mapDispatchToProps","authenticator","mergeProps","stateProps","dispatchProps","ownProps","Login","Logout","onClick","event","context","signOut","preventDefault","onLogout","Component","contextTypes","object","propTypes","PropTypes","any","isRequired","func","defaultProps","BaseNewPasswordRequired","setNewPassword","userAttributes","completeNewPasswordChallenge","setNewPasswordPartial","NewPasswordRequired","BaseEmailVerification","onCancel","verifyEmail","verificationCode","verifyAttribute","verifyPartial","EmailVerification","BasePasswordReset","sendVerificationCode","setPassword","getUser","confirmPassword","forgotPassword","sendVerificationCodePartial","setPasswordPartial","PasswordReset","BaseConfirm","onResend","confirm","confirmRegistration","confirmFailed","resend","resendConfirmationCode","confirmPartial","onResendPartial","Confirm"],"mappings":"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","file":"react-cognito.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"amazon-cognito-identity-js\", \"aws-cognito-sdk\", \"react\", \"react-redux\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCognito\"] = factory(require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"), require(\"react\"), require(\"react-redux\"));\n\telse\n\t\troot[\"ReactCognito\"] = factory(root[\"AmazonCognitoIdentity\"], root[\"AWSCognito\"], root[\"React\"], root[\"ReactRedux\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6df83bdfa5674dad5408","export * from './reducers';\nexport * from './actions';\nexport * from './states';\nexport * from './utils';\nexport * from './guard';\nexport * from './auth';\nexport * from './attributes';\nexport * from './policy';\n\n\nexport * from './Login.jsx';\nexport * from './Logout.jsx';\nexport * from './NewPasswordRequired.jsx';\nexport * from './EmailVerification.jsx';\nexport * from './PasswordReset.jsx';\nexport * from './Confirm.jsx';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport { CognitoState } from './states';\n\n/* global AWSCognito */\n\nconst initial = {\n  user: null,\n  state: CognitoState.LOGGED_OUT,\n  error: '',\n  userPool: null,\n  attributes: {},\n  creds: null,\n  config: {\n    region: null,\n    userPool: null,\n    clientId: null,\n    identityPool: null,\n  },\n};\n\nconst configure = (state, action) => {\n  // surprise side-effect!\n  AWSCognito.config.region = action.config.region;\n  const pool = new CognitoUserPool({\n    UserPoolId: action.config.userPool,\n    ClientId: action.config.clientId,\n  });\n  const user = pool.getCurrentUser();\n  return Object.assign({}, state, {\n    config: action.config,\n    userPool: pool,\n    user,\n  });\n};\n\n// sometimes we don't get the attributes in later parts of the login flow\n// but lets not clobber the ones we've got if we've not got them\nconst addAttributes = (s, attributes) => {\n  const s2 = Object.assign({}, s);\n  if (attributes) {\n    s2.attributes = attributes;\n  }\n  return s2;\n};\n\n/**\n * reducer function to be passed to redux combineReducers\n * @param {object} state\n * @param {object} action\n*/\n\nexport const cognito = (state = initial, action) => {\n  switch (action.type) {\n\n    case 'COGNITO_CONFIGURE':\n      return configure(state, action);\n\n    case 'COGNITO_AUTHENTICATED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    case 'COGNITO_LOGGING_IN':\n      return Object.assign({}, state, {\n        state: CognitoState.LOGGING_IN,\n        attributes: action.attributes,\n      });\n\n    case 'COGNITO_LOGIN':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        creds: action.creds,\n        state: CognitoState.LOGGED_IN,\n      }, action.attributes));\n\n    case 'COGNITO_LOGOUT':\n      return Object.assign({}, state, {\n        user: null,\n        error: '',\n        creds: null,\n        state: CognitoState.LOGGED_OUT,\n      });\n\n    case 'COGNITO_LOGIN_FAILURE':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.LOGGED_OUT,\n        error: action.error,\n      });\n\n    case 'COGNITO_LOGIN_MFA_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.MFA_REQUIRED,\n      });\n\n    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_USER_UNCONFIRMED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        error: action.error,\n      });\n\n    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n      return Object.assign({}, state, {\n        error: action.error,\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n      return Object.assign({}, state, addAttributes({\n        error: action.error,\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    // this moves us into the AUTHENTICATED state, potentially causing\n    // a number of side-effects. this is so we can re-verify the email\n    // address if we have to\n    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n      return Object.assign({}, state, {\n        attributes: Object.assign({}, state.attributes, action.attributes),\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}\n// module id = 2\n// module chunks = 0","\n/** states stored in store.cognito.state */\nexport const CognitoState = {\n  LOGGED_OUT: 'LOGGED_OUT',\n  AUTHENTICATED: 'AUTHENTICATED',\n  LOGGING_IN: 'LOGGING_IN',\n  LOGGED_IN: 'LOGGED_IN',\n  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n  MFA_REQUIRED: 'MFA_REQUIRED',\n  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED',\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/states.js","/**\n * container for all the actions\n*/\nconst Action = {\n\n  configure: config => ({\n    type: 'COGNITO_CONFIGURE',\n    config,\n  }),\n\n  authenticated: user => ({\n    type: 'COGNITO_AUTHENTICATED',\n    user,\n  }),\n\n  loggingIn: attributes => ({\n    type: 'COGNITO_LOGGING_IN',\n    attributes,\n  }),\n\n  login: creds => ({\n    type: 'COGNITO_LOGIN',\n    creds,\n  }),\n\n  logout: () => ({\n    type: 'COGNITO_LOGOUT',\n  }),\n\n  loginFailure: (user, error) => ({\n    type: 'COGNITO_LOGIN_FAILURE',\n    user,\n    error,\n  }),\n\n  mfaRequired: user => ({\n    type: 'COGNITO_LOGIN_MFA_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequired: user => ({\n    type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequiredFailure: (user, error) => ({\n    type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n    user,\n    error,\n  }),\n\n  emailVerificationRequired: attributes => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n    attributes,\n  }),\n\n  emailVerificationFailed: (error, attributes) => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n    error,\n    attributes,\n  }),\n\n  beginPasswordResetFlow: (user, error) => ({\n    type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n    user,\n    error,\n  }),\n\n  finishPasswordResetFlow: error => ({\n    type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n    error,\n  }),\n\n  updateAttributes: attributes => ({\n    type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n    attributes,\n  }),\n\n  confirmationRequired: (user, error) => ({\n    type: 'COGNITO_USER_UNCONFIRMED',\n    user,\n    error,\n  }),\n\n};\n\nexport { Action };\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","\n/**\n * Change a user's password\n * @param {object} user - the cognito user object\n * @param {string} oldPassword - the current password\n * @param {string} newPassword - the new password\n*/\nconst changePassword = (user, oldPassword, newPassword) =>\n  new Promise((resolve, reject) =>\n    user.changePassword(oldPassword, newPassword, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(result);\n      }\n    }));\n\n/**\n * builds the federated identity pool login structure\n * @param {string} username - the username of the user\n * @param {string} jwtToken - a JWT Token from the session\n * @param {object} config - the cognito react config object\n*/\nconst buildLogins = (username, jwtToken, config) => {\n  const loginDomain = `cognito-idp.${config.region}.amazonaws.com`;\n  const loginUrl = `${loginDomain}/${config.userPool}`;\n  const creds = {\n    IdentityPoolId: config.identityPool,\n    Logins: {},\n    LoginId: username, // https://github.com/aws/aws-sdk-js/issues/609\n  };\n  creds.Logins[loginUrl] = jwtToken;\n  return creds;\n};\n\nexport {\n  changePassword,\n  buildLogins,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","\n/*\n Default behaviour is to restrict access to only logged in users\n*/\n\nconst testLoggedIn = (state, wantLoggedIn) => {\n  const isLoggedIn = state.cognito.user !== null;\n  if (isLoggedIn && wantLoggedIn) {\n    return true;\n  }\n  if (!isLoggedIn && !wantLoggedIn) {\n    return true;\n  }\n  return false;\n};\n\nconst permitted = (state, expr) =>\n  new Promise((resolve) => {\n    if (expr.loggedIn !== undefined) {\n      resolve(testLoggedIn(state, expr.loggedIn));\n    } else {\n      resolve(testLoggedIn(state, true));\n    }\n  });\n\nconst guard = (store, forbiddenUrl, expr = {}, routeState, replace, callback) => {\n  const state = store.getState();\n  let dest = forbiddenUrl;\n\n  if (expr.forbiddenUrl !== undefined) {\n    dest = expr.forbiddenUrl;\n  }\n  permitted(state, expr).then((allow) => {\n    if (!allow) {\n      replace(dest);\n    }\n    callback();\n  });\n};\n\n/**\n * creates a guard function you can use in <Route> tags\n * @param {object} store - the redux store\n * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n * @returns {function} - a function that can be provided to onEnter\n*/\nconst createGuard = (store, forbiddenUrl) => expr => (state, replace, callback) =>\n  guard(store, forbiddenUrl, expr, state, replace, callback);\n\n\nexport { createGuard };\n\n\n\n// WEBPACK FOOTER //\n// ./src/guard.js","import { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials } from 'aws-cognito-sdk';\nimport { Action } from './actions';\nimport { mkAttrList, sendAttributeVerificationCode } from './attributes';\nimport { buildLogins } from './utils';\n\n/**\n * sends the email verification code and transitions to the correct state\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - the attributes dictionary\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst emailVerificationFlow = (user, attributes) =>\n  new Promise(resolve =>\n    sendAttributeVerificationCode(user, 'email').then((required) => {\n      if (required) {\n        resolve(Action.emailVerificationRequired(attributes));\n      } else {\n        // dead end?\n        resolve(Action.loggingIn(attributes));\n      }\n    }, (error) => {\n      // some odd classes of error here\n      resolve(Action.emailVerificationFailed(error, attributes));\n    }));\n\n/**\n * logs in to the federated identity pool with a JWT\n * @param {string} username - the username\n * @param {string} jwtToken - a token from the session\n * @param {object} config - the react-cognito config\n * @return {Promise<object>} a promise that resolves to the federated identity credentials\n*/\nconst refreshIdentityCredentials = (username, jwtToken, config) =>\n  new Promise((resolve, reject) => {\n    const logins = buildLogins(username, jwtToken, config);\n    const creds = new CognitoIdentityCredentials(logins);\n    creds.refresh((error) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        resolve(creds);\n      }\n    });\n  });\n\n/**\n * establishes a session with the user pool, and logs into the federated identity\n * pool using a token from the session\n * @param {object} user - the CognitoUser object\n * @param {object} config -the react-cognito config\n * @return {Promise<object>} an action to be dispatched\n*/\nconst performLogin = (user, config) =>\n  new Promise((resolve, reject) => {\n    if (user != null) {\n      user.getSession((err, session) => {\n        if (err) {\n          resolve(Action.loginFailure(user, err.message));\n        } else {\n          const jwtToken = session.getIdToken().getJwtToken();\n          const username = user.getUsername();\n          refreshIdentityCredentials(username, jwtToken, config).then(\n            creds => resolve(Action.login(creds)),\n            message => resolve(Action.loginFailure(user, message)));\n        }\n      });\n    } else {\n      reject('user is null');\n    }\n  });\n\n/**\n *\n * Authenticates with a user pool, and handles responses.\n * if the authentication is successful it then logs in to the\n * identity pool.\n *\n * returns an action depending on the outcome.  Possible actions returned\n * are:\n *\n * - login - valid user who is logged in\n * - loginFailure - failed to authenticate with user pool or identity pool\n * - mfaRequired - user now needs to enter MFA\n * - newPasswordRequired - user must change password on first login\n * - emailVerificationRequired - user must verify their email address\n * - emailVerificationFailed - email verification is required, but won't work\n *\n * Dispatch the resulting action, e.g.:\n *\n * ```\n * const { userPool, config } = state.cognito;\n * authenticate(username, password, userPool, config).then(dispatch);\n * ```\n *\n * @param {string} username - the username provided by the user\n * @param {string} password - the password provided by the user\n * @param {object} userPool - a Cognito User Pool object\n * @return {Promise<object>} - a promise that resolves an action to be dispatched\n *\n*/\nconst authenticate = (username, password, userPool) =>\n  new Promise((resolve) => {\n    const creds = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n    });\n\n    const user = new CognitoUser({\n      Username: username,\n      Pool: userPool,\n    });\n\n    user.authenticateUser(creds, {\n      onSuccess: () => resolve(Action.authenticated(user)),\n      onFailure: (error) => {\n        if (error.code === 'UserNotConfirmedException') {\n          resolve(Action.confirmationRequired(user));\n        } else {\n          resolve(Action.loginFailure(user, error.message));\n        }\n      },\n      mfaRequired: () => resolve(Action.mfaRequired(user)),\n      newPasswordRequired: () => resolve(Action.newPasswordRequired(user)),\n    });\n  });\n\n/**\n * sign up this user with the user pool provided\n * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n * @param {object} config - the react-cognito config object\n * @param {string} username - the username\n * @param {string} password - the password\n * @param {object} attributes - an attributes dictionary\n * @return {Promise<object>} a promise that resolves a redux action\n*/\nconst registerUser = (userPool, config, username, password, attributes) =>\n  new Promise((resolve, reject) =>\n    userPool.signUp(username, password, mkAttrList(attributes), null, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else if (result.userConfirmed === false) {\n        resolve(Action.confirmationRequired(result.user));\n      } else {\n        resolve(authenticate(username, password, userPool));\n      }\n    }));\n\n\nexport {\n  authenticate,\n  performLogin,\n  registerUser,\n  emailVerificationFlow,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"AWSCognito\",\"commonjs\":\"aws-cognito-sdk\",\"commonjs2\":\"aws-cognito-sdk\",\"amd\":\"aws-cognito-sdk\"}\n// module id = 8\n// module chunks = 0","\nimport { Action } from './actions';\n\n/**\n * Request that a verification code is sent by email or SMS to verify\n * an attribute\n * @param {object} user - the cognito user object\n * @param {string} attribute - the attribute name\n*/\nconst sendAttributeVerificationCode = (user, attribute) =>\n  new Promise((resolve, reject) => {\n    user.getAttributeVerificationCode(attribute, {\n      onSuccess: () => resolve(false),\n      inputVerificationCode: () => resolve(true),\n      onFailure: error => reject(error.message),\n    });\n  });\n\n/**\n * Fetches the user attributes from Cognito, and turns them into\n * an object\n * @param {object} user - the cognito user object\n * @returns {Promise} resolves with the attributes or rejects with an error message\n*/\nconst getUserAttributes = user =>\n  new Promise((resolve, reject) =>\n    user.getUserAttributes((error, result) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        const attributes = {};\n        for (let i = 0; i < result.length; i += 1) {\n          const name = result[i].getName();\n          const value = result[i].getValue();\n          attributes[name] = value;\n        }\n        resolve(attributes);\n      }\n    }),\n  );\n\n/**\n * convert an attribute dictionary to an attribute list\n * @param {object} attributes - a dictionary of attributes\n * @return {array} AWS expected attribute list\n*/\nconst mkAttrList = attributes =>\n  Object.keys(attributes).map(key => ({\n    Name: key,\n    Value: attributes[key],\n  }));\n\n/**\n * update the attributes in Cognito\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - an attributes dictionary with the attributes to be updated\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst updateAttributes = (user, attributes) =>\n  new Promise((resolve, reject) => {\n    const attributeList = mkAttrList(attributes);\n    user.updateAttributes(attributeList, (err) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(Action.updateAttributes(attributes));\n      }\n    });\n  });\n\nexport {\n  sendAttributeVerificationCode,\n  getUserAttributes,\n  updateAttributes,\n  mkAttrList,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/attributes.js","import { Action } from './actions';\nimport { getUserAttributes } from './attributes';\nimport { emailVerificationFlow, performLogin } from './auth';\nimport { CognitoState } from './states';\n\n/**\n * subscribes a \"policy\" function to the store, and calls it\n * with the state and the dispatch function\n * @param {object} store - the redux store\n * @param {function} f - f(state, dispatch)\n*/\nconst enable = (store, f) => {\n  store.subscribe(() => {\n    const state = store.getState();\n    const dispatch = store.dispatch;\n    f(state, dispatch);\n  });\n};\n\n/**\n * requires email verification before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst emailVerificationRequired = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      if (attributes.email_verified !== 'true') {\n        emailVerificationFlow(user, attributes).then(dispatch);\n      } else {\n        dispatch(Action.loggingIn(attributes));\n      }\n    });\n  }\n};\n\n/**\n * fetches and stores attributes before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst fetchAttributes = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      dispatch(Action.loggingIn(attributes));\n    });\n  }\n};\n\n/**\n * transitions directly from AUTHENTICATED to LOGGING_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst direct = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    dispatch(Action.loggingIn());\n  }\n};\n\n/**\n * logs into the single federated identity pool to transition from LOGGING_IN\n * to LOGGED_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst identityPoolLogin = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.LOGGING_IN) {\n    performLogin(state.cognito.user, state.cognito.config).then(dispatch);\n  }\n};\n\n/**\n * sets up react-cognito with default policies.\n*/\nconst setupCognito = (store, config) => {\n  store.dispatch(Action.configure(config));\n  enable(store, emailVerificationRequired);\n  enable(store, identityPoolLogin);\n};\n\nexport {\n  setupCognito,\n  enable,\n  direct,\n  fetchAttributes,\n  emailVerificationRequired,\n  identityPoolLogin,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/policy.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate } from './auth';\n\n/* global AWSCognito */\n\nconst BaseLogin = props =>\n  React.cloneElement(props.children, {\n    username: props.username,\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst mapStateToProps = (state) => {\n  let username = '';\n  if (state.cognito.user) {\n    username = state.cognito.user.getUsername();\n  }\n  return {\n    username,\n    error: state.cognito.error,\n    config: state.cognito.config,\n    userPool: state.cognito.userPool,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authenticator: (username, password, userPool, config) => {\n    authenticate(username, password, userPool, config).then(dispatch);\n  },\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (username, password) =>\n      dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config),\n  });\n\nconst Login = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseLogin);\n\nexport { Login };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Login.jsx","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 12\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}\n// module id = 13\n// module chunks = 0","import React, { PropTypes } from 'react';\nimport { Action } from './actions';\n\nexport class Logout extends React.Component {\n\n  onClick = (event) => {\n    const { store } = this.context;\n    const state = store.getState();\n    state.cognito.user.signOut();\n    event.preventDefault();\n    store.dispatch(Action.logout());\n    this.props.onLogout();\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      onClick: this.onClick,\n    });\n  }\n}\nLogout.contextTypes = {\n  store: PropTypes.object,\n};\nLogout.propTypes = {\n  children: React.PropTypes.any.isRequired,\n  onLogout: React.PropTypes.func,\n};\nLogout.defaultProps = {\n  onLogout: () => {},\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Logout.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseNewPasswordRequired = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst setNewPassword = (password, user, config, userAttributes, dispatch) =>\n  user.completeNewPasswordChallenge(password, userAttributes, {\n    onSuccess: () => dispatch(Action.authenticated(user)),\n    onFailure: error => dispatch(Action.newPasswordRequiredFailure(user, error.message)),\n    mfaRequired: () => dispatch(Action.mfaRequired(user)),\n    newPasswordRequired: () => dispatch(Action.newPasswordRequired(user)),\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n  config: state.cognito.config,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNewPasswordPartial: (password, user, config, userAttributes) =>\n    setNewPassword(password, user, config, userAttributes, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (password, userAttributes) =>\n     dispatchProps.setNewPasswordPartial(\n      password,\n      stateProps.user,\n      stateProps.config,\n      userAttributes),\n  });\n\nexport const NewPasswordRequired = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseNewPasswordRequired);\n\n\n\n// WEBPACK FOOTER //\n// ./src/NewPasswordRequired.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseEmailVerification = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onCancel: props.onCancel,\n  });\n\nconst verifyEmail = (verificationCode, user, dispatch) =>\n  user.verifyAttribute('email', verificationCode, {\n    onSuccess: () => dispatch(Action.login(user)),\n    inputVerificationCode: () => dispatch(Action.emailVerificationRequired(user)),\n    onFailure: error => dispatch(Action.emailVerificationFailed(user, error.message)),\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  verifyPartial: (verificationCode, user) =>\n    verifyEmail(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.verifyPartial(verificationCode, stateProps.user),\n  });\n\nexport const EmailVerification = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseEmailVerification);\n\n\n\n// WEBPACK FOOTER //\n// ./src/EmailVerification.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Action } from './actions';\n\nconst BasePasswordReset = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    username: props.username,\n    sendVerificationCode: props.sendVerificationCode,\n    setPassword: props.setPassword,\n  });\n\nconst getUser = (username, userPool) => {\n  const user = new CognitoUser({\n    Username: username,\n    Pool: userPool,\n  });\n  return user;\n};\n\nconst setPassword = (username, userPool, code, password) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.confirmPassword(code, password, {\n      onSuccess: () => resolve(Action.finishPasswordResetFlow('Password reset')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst sendVerificationCode = (username, userPool) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.forgotPassword({\n      onSuccess: () => resolve(Action.beginPasswordResetFlow(user, 'Verification code sent')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst mapStateToProps = (state) => {\n  const props = {\n    error: state.cognito.error || '',\n    user: state.cognito.user,\n    username: '',\n    userPool: state.cognito.userPool,\n  };\n  if (state.cognito.user != null) {\n    props.username = state.cognito.user.getUsername();\n  }\n  return props;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  sendVerificationCodePartial: (username, userPool) => {\n    sendVerificationCode(username, userPool).then(dispatch);\n  },\n  setPasswordPartial: (user, userPool, code, password) => {\n    setPassword(user, userPool, code, password).then(dispatch);\n  },\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    sendVerificationCode: username =>\n      dispatchProps.sendVerificationCodePartial(username, stateProps.userPool),\n    setPassword: (username, code, password) =>\n      dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password),\n  });\n\nexport const PasswordReset = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BasePasswordReset);\n\n\n\n// WEBPACK FOOTER //\n// ./src/PasswordReset.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseConfirm = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onResend: props.onResend,\n    onCancel: props.onCancel,\n  });\n\nconst confirm = (verificationCode, user, dispatch) => {\n  user.confirmRegistration(verificationCode, true, (error) => {\n    if (error) {\n      dispatch(Action.confirmFailed(user, error.message));\n    } else {\n      dispatch(Action.logout());\n    }\n  });\n};\n\nconst resend = (user, dispatch) =>\n  user.resendConfirmationCode((err) => {\n    if (err) {\n      dispatch(Action.confirmationRequired(user, err.message));\n    } else {\n      dispatch(Action.confirmationRequired(user, 'Confirmation code resent'));\n    }\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  confirmPartial: (verificationCode, user) =>\n    confirm(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n  onResendPartial: user => resend(user, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.confirmPartial(verificationCode, stateProps.user),\n    onResend: () =>\n     dispatchProps.onResendPartial(stateProps.user),\n  });\n\nexport const Confirm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseConfirm);\n\n\n\n// WEBPACK FOOTER //\n// ./src/Confirm.jsx"],"sourceRoot":""}
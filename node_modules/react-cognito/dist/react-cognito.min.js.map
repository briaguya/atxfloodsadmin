{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-cognito.min.js","webpack:///webpack/bootstrap ed368c1ea57fbe75960e","webpack:///./src/index.js","webpack:///./src/actions.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}","webpack:///./src/attributes.js","webpack:///./src/auth.js","webpack:///./src/states.js","webpack:///external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}","webpack:///./src/utils.js","webpack:///./src/Confirm.jsx","webpack:///./src/EmailVerification.jsx","webpack:///./src/Login.jsx","webpack:///./src/Logout.jsx","webpack:///./src/NewPasswordRequired.jsx","webpack:///./src/PasswordReset.jsx","webpack:///./src/guard.js","webpack:///./src/policy.js","webpack:///./src/reducers.js","webpack:///external {\"root\":\"AWSCognito\",\"commonjs\":\"aws-cognito-sdk\",\"commonjs2\":\"aws-cognito-sdk\",\"amd\":\"aws-cognito-sdk\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_18__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_reducers","keys","forEach","key","enumerable","get","_actions","_states","_utils","_guard","_auth","_attributes","_policy","_Login","_Logout","_NewPasswordRequired","_EmailVerification","_PasswordReset","_Confirm","Action","configure","config","type","authenticated","user","loggingIn","attributes","login","creds","logout","loginFailure","error","mfaRequired","newPasswordRequired","newPasswordRequiredFailure","emailVerificationRequired","emailVerificationFailed","beginPasswordResetFlow","finishPasswordResetFlow","updateAttributes","confirmationRequired","confirmFailed","mkAttrList","getUserAttributes","sendAttributeVerificationCode","undefined","attribute","Promise","resolve","reject","getAttributeVerificationCode","onSuccess","inputVerificationCode","onFailure","message","result","i","length","name","getName","getValue","map","Name","Value","attributeList","err","emailVerificationFlow","registerUser","performLogin","authenticate","_amazonCognitoIdentityJs","_awsCognitoSdk","then","required","refreshIdentityCredentials","username","jwtToken","logins","buildLogins","CognitoIdentityCredentials","refresh","getSession","session","getIdToken","getJwtToken","getUsername","password","userPool","AuthenticationDetails","Username","Password","CognitoUser","Pool","authenticateUser","code","signUp","userConfirmed","CognitoState","LOGGED_OUT","AUTHENTICATED","LOGGING_IN","LOGGED_IN","NEW_PASSWORD_REQUIRED","MFA_REQUIRED","EMAIL_VERIFICATION_REQUIRED","CONFIRMATION_REQUIRED","changePassword","oldPassword","newPassword","loginDomain","region","loginUrl","IdentityPoolId","identityPool","Logins","LoginId","_interopRequireDefault","obj","__esModule","default","Confirm","_react","_react2","_reactRedux","BaseConfirm","props","cloneElement","children","onSubmit","onResend","onCancel","confirm","verificationCode","dispatch","confirmRegistration","resend","resendConfirmationCode","mapStateToProps","state","cognito","mapDispatchToProps","confirmPartial","onResendPartial","mergeProps","stateProps","dispatchProps","ownProps","assign","connect","EmailVerification","verifyEmail","BaseEmailVerification","verifyAttribute","verifyPartial","Login","BaseLogin","authenticator","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","writable","configurable","setPrototypeOf","__proto__","Logout","_createClass","defineProperties","target","descriptor","protoProps","staticProps","_React$Component","_ref","_temp","_this","_ret","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","onClick","event","store","context","getState","signOut","preventDefault","onLogout","Component","contextTypes","PropTypes","object","propTypes","any","isRequired","func","defaultProps","NewPasswordRequired","BaseNewPasswordRequired","setNewPassword","userAttributes","completeNewPasswordChallenge","setNewPasswordPartial","PasswordReset","BasePasswordReset","sendVerificationCode","setPassword","getUser","confirmPassword","forgotPassword","sendVerificationCodePartial","setPasswordPartial","testLoggedIn","wantLoggedIn","isLoggedIn","permitted","expr","loggedIn","guard","forbiddenUrl","replace","callback","dest","allow","createGuard","identityPoolLogin","fetchAttributes","direct","enable","setupCognito","f","subscribe","email_verified","initial","clientId","action","AWSCognito","pool","CognitoUserPool","UserPoolId","ClientId","getCurrentUser","addAttributes","s","s2"],"mappings":"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","file":"react-cognito.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-redux\", \"amazon-cognito-identity-js\", \"aws-cognito-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCognito\"] = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"));\n\telse\n\t\troot[\"ReactCognito\"] = factory(root[\"React\"], root[\"ReactRedux\"], root[\"AmazonCognitoIdentity\"], root[\"AWSCognito\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_18__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-redux\", \"amazon-cognito-identity-js\", \"aws-cognito-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCognito\"] = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-cognito-sdk\"));\n\telse\n\t\troot[\"ReactCognito\"] = factory(root[\"React\"], root[\"ReactRedux\"], root[\"AmazonCognitoIdentity\"], root[\"AWSCognito\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_18__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _reducers = __webpack_require__(17);\n\t\n\tObject.keys(_reducers).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _reducers[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tObject.keys(_actions).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _actions[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\tObject.keys(_states).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _states[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _utils = __webpack_require__(8);\n\t\n\tObject.keys(_utils).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _utils[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _guard = __webpack_require__(15);\n\t\n\tObject.keys(_guard).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _guard[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tObject.keys(_auth).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _auth[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tObject.keys(_attributes).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _attributes[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _policy = __webpack_require__(16);\n\t\n\tObject.keys(_policy).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _policy[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Login = __webpack_require__(11);\n\t\n\tObject.keys(_Login).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Login[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Logout = __webpack_require__(12);\n\t\n\tObject.keys(_Logout).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Logout[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _NewPasswordRequired = __webpack_require__(13);\n\t\n\tObject.keys(_NewPasswordRequired).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _NewPasswordRequired[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _EmailVerification = __webpack_require__(10);\n\t\n\tObject.keys(_EmailVerification).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _EmailVerification[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _PasswordReset = __webpack_require__(14);\n\t\n\tObject.keys(_PasswordReset).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _PasswordReset[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Confirm = __webpack_require__(9);\n\t\n\tObject.keys(_Confirm).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Confirm[key];\n\t    }\n\t  });\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * container for all the actions\n\t*/\n\tvar Action = {\n\t\n\t  configure: function configure(config) {\n\t    return {\n\t      type: 'COGNITO_CONFIGURE',\n\t      config: config\n\t    };\n\t  },\n\t\n\t  authenticated: function authenticated(user) {\n\t    return {\n\t      type: 'COGNITO_AUTHENTICATED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  loggingIn: function loggingIn(attributes) {\n\t    return {\n\t      type: 'COGNITO_LOGGING_IN',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  login: function login(creds) {\n\t    return {\n\t      type: 'COGNITO_LOGIN',\n\t      creds: creds\n\t    };\n\t  },\n\t\n\t  logout: function logout() {\n\t    return {\n\t      type: 'COGNITO_LOGOUT'\n\t    };\n\t  },\n\t\n\t  loginFailure: function loginFailure(user, error) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_FAILURE',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  mfaRequired: function mfaRequired(user) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_MFA_REQUIRED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  newPasswordRequired: function newPasswordRequired(user) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  newPasswordRequiredFailure: function newPasswordRequiredFailure(user, error) {\n\t    return {\n\t      type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  emailVerificationRequired: function emailVerificationRequired(attributes) {\n\t    return {\n\t      type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  emailVerificationFailed: function emailVerificationFailed(user, error) {\n\t    return {\n\t      type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  beginPasswordResetFlow: function beginPasswordResetFlow(user, error) {\n\t    return {\n\t      type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  finishPasswordResetFlow: function finishPasswordResetFlow(error) {\n\t    return {\n\t      type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n\t      error: error\n\t    };\n\t  },\n\t\n\t  updateAttributes: function updateAttributes(attributes) {\n\t    return {\n\t      type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  confirmationRequired: function confirmationRequired(user, error) {\n\t    return {\n\t      type: 'COGNITO_USER_UNCONFIRMED',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  confirmFailed: function confirmFailed(user, error) {\n\t    return {\n\t      type: 'COGNITO_USER_CONFIRM_FAILED',\n\t      user: user,\n\t      error: error\n\t    };\n\t  }\n\t};\n\t\n\texports.Action = Action;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mkAttrList = exports.updateAttributes = exports.getUserAttributes = exports.sendAttributeVerificationCode = undefined;\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\t/**\n\t * Request that a verification code is sent by email or SMS to verify\n\t * an attribute\n\t * @param {object} user - the cognito user object\n\t * @param {string} attribute - the attribute name\n\t*/\n\tvar sendAttributeVerificationCode = function sendAttributeVerificationCode(user, attribute) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.getAttributeVerificationCode(attribute, {\n\t      onSuccess: function onSuccess() {\n\t        return resolve(false);\n\t      },\n\t      inputVerificationCode: function inputVerificationCode() {\n\t        return resolve(true);\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        return reject(error.message);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Fetches the user attributes from Cognito, and turns them into\n\t * an object\n\t * @param {object} user - the cognito user object\n\t * @returns {Promise} resolves with the attributes or rejects with an error message\n\t*/\n\tvar getUserAttributes = function getUserAttributes(user) {\n\t  return new Promise(function (resolve, reject) {\n\t    return user.getUserAttributes(function (error, result) {\n\t      if (error) {\n\t        reject(error.message);\n\t      } else {\n\t        var attributes = {};\n\t        for (var i = 0; i < result.length; i += 1) {\n\t          var name = result[i].getName();\n\t          var value = result[i].getValue();\n\t          attributes[name] = value;\n\t        }\n\t        resolve(attributes);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * convert an attribute dictionary to an attribute list\n\t * @param {object} attributes - a dictionary of attributes\n\t * @return {array} AWS expected attribute list\n\t*/\n\tvar mkAttrList = function mkAttrList(attributes) {\n\t  return Object.keys(attributes).map(function (key) {\n\t    return {\n\t      Name: key,\n\t      Value: attributes[key]\n\t    };\n\t  });\n\t};\n\t\n\t/**\n\t * update the attributes in Cognito\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} attributes - an attributes dictionary with the attributes to be updated\n\t * @return {Promise<object>} a promise that resolves to a redux action\n\t*/\n\tvar updateAttributes = function updateAttributes(user, attributes) {\n\t  return new Promise(function (resolve, reject) {\n\t    var attributeList = mkAttrList(attributes);\n\t    user.updateAttributes(attributeList, function (err) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else {\n\t        resolve(_actions.Action.updateAttributes(attributes));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\texports.sendAttributeVerificationCode = sendAttributeVerificationCode;\n\texports.getUserAttributes = getUserAttributes;\n\texports.updateAttributes = updateAttributes;\n\texports.mkAttrList = mkAttrList;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.emailVerificationFlow = exports.registerUser = exports.performLogin = exports.authenticate = undefined;\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _awsCognitoSdk = __webpack_require__(18);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(8);\n\t\n\t/**\n\t * sends the email verification code and transitions to the correct state\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} attributes - the attributes dictionary\n\t * @return {Promise<object>} a promise that resolves to a redux action\n\t*/\n\tvar emailVerificationFlow = function emailVerificationFlow(user, attributes) {\n\t  return new Promise(function (resolve) {\n\t    return (0, _attributes.sendAttributeVerificationCode)(user, 'email').then(function (required) {\n\t      if (required) {\n\t        resolve(_actions.Action.emailVerificationRequired(attributes));\n\t      } else {\n\t        // dead end?\n\t        resolve(_actions.Action.loggingIn(attributes));\n\t      }\n\t    }, function (error) {\n\t      // some odd classes of error here\n\t      resolve(_actions.Action.emailVerificationFailed(error, attributes));\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * logs in to the federated identity pool with a JWT\n\t * @param {string} username - the username\n\t * @param {string} jwtToken - a token from the session\n\t * @param {object} config - the react-cognito config\n\t * @return {Promise<object>} a promise that resolves to the federated identity credentials\n\t*/\n\tvar refreshIdentityCredentials = function refreshIdentityCredentials(username, jwtToken, config) {\n\t  return new Promise(function (resolve, reject) {\n\t    var logins = (0, _utils.buildLogins)(username, jwtToken, config);\n\t    var creds = new _awsCognitoSdk.CognitoIdentityCredentials(logins);\n\t    creds.refresh(function (error) {\n\t      if (error) {\n\t        reject(error.message);\n\t      } else {\n\t        resolve(creds);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * establishes a session with the user pool, and logs into the federated identity\n\t * pool using a token from the session\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} config -the react-cognito config\n\t * @return {Promise<object>} an action to be dispatched\n\t*/\n\tvar performLogin = function performLogin(user, config) {\n\t  return new Promise(function (resolve, reject) {\n\t    if (user != null) {\n\t      user.getSession(function (err, session) {\n\t        if (err) {\n\t          resolve(_actions.Action.loginFailure(user, err.message));\n\t        } else {\n\t          var jwtToken = session.getIdToken().getJwtToken();\n\t          var username = user.getUsername();\n\t          refreshIdentityCredentials(username, jwtToken, config).then(function (creds) {\n\t            return resolve(_actions.Action.login(creds));\n\t          }, function (message) {\n\t            return resolve(_actions.Action.loginFailure(user, message));\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      reject('user is null');\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t *\n\t * Authenticates with a user pool, and handles responses.\n\t * if the authentication is successful it then logs in to the\n\t * identity pool.\n\t *\n\t * returns an action depending on the outcome.  Possible actions returned\n\t * are:\n\t *\n\t * - login - valid user who is logged in\n\t * - loginFailure - failed to authenticate with user pool or identity pool\n\t * - mfaRequired - user now needs to enter MFA\n\t * - newPasswordRequired - user must change password on first login\n\t * - emailVerificationRequired - user must verify their email address\n\t * - emailVerificationFailed - email verification is required, but won't work\n\t *\n\t * Dispatch the resulting action, e.g.:\n\t *\n\t * ```\n\t * const { userPool, config } = state.cognito;\n\t * authenticate(username, password, userPool, config).then(dispatch);\n\t * ```\n\t *\n\t * @param {string} username - the username provided by the user\n\t * @param {string} password - the password provided by the user\n\t * @param {object} userPool - a Cognito User Pool object\n\t * @return {Promise<object>} - a promise that resolves an action to be dispatched\n\t *\n\t*/\n\tvar authenticate = function authenticate(username, password, userPool) {\n\t  return new Promise(function (resolve) {\n\t    var creds = new _amazonCognitoIdentityJs.AuthenticationDetails({\n\t      Username: username,\n\t      Password: password\n\t    });\n\t\n\t    var user = new _amazonCognitoIdentityJs.CognitoUser({\n\t      Username: username,\n\t      Pool: userPool\n\t    });\n\t\n\t    user.authenticateUser(creds, {\n\t      onSuccess: function onSuccess() {\n\t        return resolve(_actions.Action.authenticated(user));\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        if (error.code === 'UserNotConfirmedException') {\n\t          resolve(_actions.Action.confirmationRequired(user));\n\t        } else {\n\t          resolve(_actions.Action.loginFailure(user, error.message));\n\t        }\n\t      },\n\t      mfaRequired: function mfaRequired() {\n\t        return resolve(_actions.Action.mfaRequired(user));\n\t      },\n\t      newPasswordRequired: function newPasswordRequired() {\n\t        return resolve(_actions.Action.newPasswordRequired(user));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * sign up this user with the user pool provided\n\t * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n\t * @param {object} config - the react-cognito config object\n\t * @param {string} username - the username\n\t * @param {string} password - the password\n\t * @param {object} attributes - an attributes dictionary\n\t * @return {Promise<object>} a promise that resolves a redux action\n\t*/\n\tvar registerUser = function registerUser(userPool, config, username, password, attributes) {\n\t  return new Promise(function (resolve, reject) {\n\t    return userPool.signUp(username, password, (0, _attributes.mkAttrList)(attributes), null, function (err, result) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else if (result.userConfirmed === false) {\n\t        resolve(_actions.Action.confirmationRequired(result.user));\n\t      } else {\n\t        resolve(authenticate(username, password, userPool));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\texports.authenticate = authenticate;\n\texports.performLogin = performLogin;\n\texports.registerUser = registerUser;\n\texports.emailVerificationFlow = emailVerificationFlow;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/** states stored in store.cognito.state */\n\tvar CognitoState = exports.CognitoState = {\n\t  LOGGED_OUT: 'LOGGED_OUT',\n\t  AUTHENTICATED: 'AUTHENTICATED',\n\t  LOGGING_IN: 'LOGGING_IN',\n\t  LOGGED_IN: 'LOGGED_IN',\n\t  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n\t  MFA_REQUIRED: 'MFA_REQUIRED',\n\t  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n\t  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED'\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/**\n\t * Change a user's password\n\t * @param {object} user - the cognito user object\n\t * @param {string} oldPassword - the current password\n\t * @param {string} newPassword - the new password\n\t*/\n\tvar changePassword = function changePassword(user, oldPassword, newPassword) {\n\t  return new Promise(function (resolve, reject) {\n\t    return user.changePassword(oldPassword, newPassword, function (err, result) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else {\n\t        resolve(result);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * builds the federated identity pool login structure\n\t * @param {string} username - the username of the user\n\t * @param {string} jwtToken - a JWT Token from the session\n\t * @param {object} config - the cognito react config object\n\t*/\n\tvar buildLogins = function buildLogins(username, jwtToken, config) {\n\t  var loginDomain = \"cognito-idp.\" + config.region + \".amazonaws.com\";\n\t  var loginUrl = loginDomain + \"/\" + config.userPool;\n\t  var creds = {\n\t    IdentityPoolId: config.identityPool,\n\t    Logins: {},\n\t    LoginId: username };\n\t  creds.Logins[loginUrl] = jwtToken;\n\t  return creds;\n\t};\n\t\n\texports.changePassword = changePassword;\n\texports.buildLogins = buildLogins;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Confirm = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseConfirm = function BaseConfirm(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit,\n\t    onResend: props.onResend,\n\t    onCancel: props.onCancel\n\t  });\n\t};\n\t\n\tvar confirm = function confirm(verificationCode, user, dispatch) {\n\t  user.confirmRegistration(verificationCode, true, function (error) {\n\t    if (error) {\n\t      dispatch(_actions.Action.confirmFailed(user, error.message));\n\t    } else {\n\t      dispatch(_actions.Action.logout());\n\t    }\n\t  });\n\t};\n\t\n\tvar resend = function resend(user, dispatch) {\n\t  return user.resendConfirmationCode(function (err) {\n\t    if (err) {\n\t      dispatch(_actions.Action.confirmationRequired(user, err.message));\n\t    } else {\n\t      dispatch(_actions.Action.confirmationRequired(user, 'Confirmation code resent'));\n\t    }\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    confirmPartial: function confirmPartial(verificationCode, user) {\n\t      return confirm(verificationCode, user, dispatch);\n\t    },\n\t    onCancel: function onCancel() {\n\t      return dispatch(_actions.Action.logout());\n\t    },\n\t    onResendPartial: function onResendPartial(user) {\n\t      return resend(user, dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, dispatchProps, {\n\t    onSubmit: function onSubmit(verificationCode) {\n\t      return dispatchProps.confirmPartial(verificationCode, stateProps.user);\n\t    },\n\t    onResend: function onResend() {\n\t      return dispatchProps.onResendPartial(stateProps.user);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Container for a confirmation form.  Magically adds the following props to the \n\t * contained form:\n\t *\n\t *  * user - the Cognito User from the redux store\n\t *  * error - the persisted error from the redux store\n\t *  * onSubmit - a handler that calls the Cognito confirm API\n\t *  * onResend - a handler that calls the Cognito resend request API\n\t *  * onCancel - Logs the user out completely\n\t *\n\t * @example\n\t * <Confirm>\n\t *   <ConfirmForm />\n\t * </Confirm>\n\t *\n\t */\n\tvar Confirm = exports.Confirm = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseConfirm);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.EmailVerification = exports.verifyEmail = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseEmailVerification = function BaseEmailVerification(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit,\n\t    onCancel: props.onCancel\n\t  });\n\t};\n\t\n\tvar verifyEmail = exports.verifyEmail = function verifyEmail(verificationCode, user, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.verifyAttribute('email', verificationCode, {\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.login(user));\n\t        resolve();\n\t      },\n\t      inputVerificationCode: function inputVerificationCode() {\n\t        dispatch(_actions.Action.emailVerificationRequired(user));\n\t        reject();\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        dispatch(_actions.Action.emailVerificationFailed(user, error.message));\n\t        reject();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    verifyPartial: function verifyPartial(verificationCode, user) {\n\t      return verifyEmail(verificationCode, user, dispatch);\n\t    },\n\t    onCancel: function onCancel() {\n\t      return dispatch(_actions.Action.logout());\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, dispatchProps, {\n\t    onSubmit: function onSubmit(verificationCode) {\n\t      return dispatchProps.verifyPartial(verificationCode, stateProps.user);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Wrapper for an Email Verification Form.\n\t * Magically adds the following props to the contained form:\n\t *\n\t *  * user - the Cognito user from the Redux store\n\t *  * error - the persisted error from the Redux store\n\t *  * onSubmit - a handler that calls the Cognito verification API\n\t *\n\t * @example\n\t * <EmailVerification>\n\t *   <EmailVerificationForm />\n\t * </EmailVerification>\n\t *\n\t */\n\tvar EmailVerification = exports.EmailVerification = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseEmailVerification);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Login = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseLogin = function BaseLogin(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    username: props.username,\n\t    error: props.error,\n\t    onSubmit: props.onSubmit\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  var username = '';\n\t  if (state.cognito.user) {\n\t    username = state.cognito.user.getUsername();\n\t  }\n\t  return {\n\t    username: username,\n\t    error: state.cognito.error,\n\t    config: state.cognito.config,\n\t    userPool: state.cognito.userPool\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    authenticator: function authenticator(username, password, userPool, config) {\n\t      return (0, _auth.authenticate)(username, password, userPool, config).then(dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    onSubmit: function onSubmit(username, password) {\n\t      return dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Container for login behaviour, wrapping a login form.\n\t *\n\t * Magically provides the following props to the wrapped form:\n\t *\n\t *  * username\n\t *  * error\n\t *  * onSubmit\n\t *\n\t * @example\n\t * <Login>\n\t *   <LoginForm />\n\t * </Login>\n\t */\n\tvar Login = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseLogin);\n\t\n\texports.Login = Login;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Logout = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container for logout behaviour.\n\t * @example\n\t * <Logout onLogout={handler}>\n\t *   <LogoutForm />\n\t * </Logout>\n\t */\n\tvar Logout = exports.Logout = function (_React$Component) {\n\t  _inherits(Logout, _React$Component);\n\t\n\t  function Logout() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, Logout);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Logout.__proto__ || Object.getPrototypeOf(Logout)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n\t      var store = _this.context.store;\n\t\n\t      var state = store.getState();\n\t      state.cognito.user.signOut();\n\t      event.preventDefault();\n\t      store.dispatch(_actions.Action.logout());\n\t      _this.props.onLogout();\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Passed to child element as onClick prop.\n\t   * Signs the user out, and then dispatches the logout action\n\t   * If you want to take further actions (like reloading UI) then add an\n\t   * onLogout property to the Logout element\n\t   */\n\t\n\t\n\t  _createClass(Logout, [{\n\t    key: 'render',\n\t\n\t\n\t    /**\n\t     * renders the child element, adding an onClick property\n\t     */\n\t    value: function render() {\n\t      return _react2.default.cloneElement(this.props.children, {\n\t        onClick: this.onClick\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Logout;\n\t}(_react2.default.Component);\n\t\n\tLogout.contextTypes = {\n\t  store: _react.PropTypes.object\n\t};\n\tLogout.propTypes = {\n\t  children: _react2.default.PropTypes.any.isRequired,\n\t  onLogout: _react2.default.PropTypes.func\n\t};\n\tLogout.defaultProps = {\n\t  onLogout: function onLogout() {}\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NewPasswordRequired = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseNewPasswordRequired = function BaseNewPasswordRequired(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit\n\t  });\n\t};\n\t\n\tvar setNewPassword = function setNewPassword(password, user, config, userAttributes, dispatch) {\n\t  return user.completeNewPasswordChallenge(password, userAttributes, {\n\t    onSuccess: function onSuccess() {\n\t      return dispatch(_actions.Action.authenticated(user));\n\t    },\n\t    onFailure: function onFailure(error) {\n\t      return dispatch(_actions.Action.newPasswordRequiredFailure(user, error.message));\n\t    },\n\t    mfaRequired: function mfaRequired() {\n\t      return dispatch(_actions.Action.mfaRequired(user));\n\t    },\n\t    newPasswordRequired: function newPasswordRequired() {\n\t      return dispatch(_actions.Action.newPasswordRequired(user));\n\t    }\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user,\n\t    config: state.cognito.config\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    setNewPasswordPartial: function setNewPasswordPartial(password, user, config, userAttributes) {\n\t      return setNewPassword(password, user, config, userAttributes, dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    onSubmit: function onSubmit(password, userAttributes) {\n\t      return dispatchProps.setNewPasswordPartial(password, stateProps.user, stateProps.config, userAttributes);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Wrapper for a New Password Required form\n\t *\n\t * Magically provides the following props to the wrapped element:\n\t *\n\t * * user - the Cognito user\n\t * * error - the persistent react-cognito error message\n\t * * onSubmit - a handler that calls the Set New Password API\n\t *\n\t * @example\n\t *\n\t * <NewPasswordRequired>\n\t *   <NewPasswordRequiredForm />\n\t * </NewPasswordRequired>\n\t */\n\tvar NewPasswordRequired = exports.NewPasswordRequired = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseNewPasswordRequired);\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PasswordReset = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BasePasswordReset = function BasePasswordReset(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    username: props.username,\n\t    sendVerificationCode: props.sendVerificationCode,\n\t    setPassword: props.setPassword\n\t  });\n\t};\n\t\n\tvar getUser = function getUser(username, userPool) {\n\t  var user = new _amazonCognitoIdentityJs.CognitoUser({\n\t    Username: username,\n\t    Pool: userPool\n\t  });\n\t  return user;\n\t};\n\t\n\tvar setPassword = function setPassword(username, userPool, code, password) {\n\t  return new Promise(function (resolve) {\n\t    var user = getUser(username, userPool);\n\t    user.confirmPassword(code, password, {\n\t      onSuccess: function onSuccess() {\n\t        return resolve(_actions.Action.finishPasswordResetFlow('Password reset'));\n\t      },\n\t      onFailure: function onFailure(err) {\n\t        return resolve(_actions.Action.beginPasswordResetFlow(user, err.message));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar sendVerificationCode = function sendVerificationCode(username, userPool) {\n\t  return new Promise(function (resolve) {\n\t    var user = getUser(username, userPool);\n\t    user.forgotPassword({\n\t      onSuccess: function onSuccess() {\n\t        return resolve(_actions.Action.beginPasswordResetFlow(user, 'Verification code sent'));\n\t      },\n\t      onFailure: function onFailure(err) {\n\t        return resolve(_actions.Action.beginPasswordResetFlow(user, err.message));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  var props = {\n\t    error: state.cognito.error || '',\n\t    user: state.cognito.user,\n\t    username: '',\n\t    userPool: state.cognito.userPool\n\t  };\n\t  if (state.cognito.user != null) {\n\t    props.username = state.cognito.user.getUsername();\n\t  }\n\t  return props;\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    sendVerificationCodePartial: function sendVerificationCodePartial(username, userPool) {\n\t      sendVerificationCode(username, userPool).then(dispatch);\n\t    },\n\t    setPasswordPartial: function setPasswordPartial(user, userPool, code, password) {\n\t      setPassword(user, userPool, code, password).then(dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    sendVerificationCode: function sendVerificationCode(username) {\n\t      return dispatchProps.sendVerificationCodePartial(username, stateProps.userPool);\n\t    },\n\t    setPassword: function setPassword(username, code, password) {\n\t      return dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Container for a Password Reset form\n\t *\n\t * Magically provides the following props to the wrapped element:\n\t *\n\t *  * user\n\t *  * username\n\t *  * error\n\t *  * sendVerificationCode\n\t *  * setPassword\n\t *\n\t * @example\n\t * <PasswordReset>\n\t *   <PasswordResetForm />\n\t * </PasswordReset>\n\t */\n\tvar PasswordReset = exports.PasswordReset = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BasePasswordReset);\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/*\n\t Default behaviour is to restrict access to only logged in users\n\t*/\n\t\n\tvar testLoggedIn = function testLoggedIn(state, wantLoggedIn) {\n\t  var isLoggedIn = state.cognito.user !== null;\n\t  if (isLoggedIn && wantLoggedIn) {\n\t    return true;\n\t  }\n\t  if (!isLoggedIn && !wantLoggedIn) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar permitted = function permitted(state, expr) {\n\t  return new Promise(function (resolve) {\n\t    if (expr.loggedIn !== undefined) {\n\t      resolve(testLoggedIn(state, expr.loggedIn));\n\t    } else {\n\t      resolve(testLoggedIn(state, true));\n\t    }\n\t  });\n\t};\n\t\n\tvar guard = function guard(store, forbiddenUrl) {\n\t  var expr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t  var routeState = arguments[3];\n\t  var replace = arguments[4];\n\t  var callback = arguments[5];\n\t\n\t  var state = store.getState();\n\t  var dest = forbiddenUrl;\n\t\n\t  if (expr.forbiddenUrl !== undefined) {\n\t    dest = expr.forbiddenUrl;\n\t  }\n\t  permitted(state, expr).then(function (allow) {\n\t    if (!allow) {\n\t      replace(dest);\n\t    }\n\t    callback();\n\t  });\n\t};\n\t\n\t/**\n\t * creates a guard function you can use in <Route> tags\n\t * @param {object} store - the redux store\n\t * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n\t * @returns {function} - a function that can be provided to onEnter\n\t*/\n\tvar createGuard = function createGuard(store, forbiddenUrl) {\n\t  return function (expr) {\n\t    return function (state, replace, callback) {\n\t      return guard(store, forbiddenUrl, expr, state, replace, callback);\n\t    };\n\t  };\n\t};\n\t\n\texports.createGuard = createGuard;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.identityPoolLogin = exports.emailVerificationRequired = exports.fetchAttributes = exports.direct = exports.enable = exports.setupCognito = undefined;\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\t/**\n\t * subscribes a \"policy\" function to the store, and calls it\n\t * with the state and the dispatch function\n\t * @param {object} store - the redux store\n\t * @param {function} f - f(state, dispatch)\n\t*/\n\tvar enable = function enable(store, f) {\n\t  store.subscribe(function () {\n\t    var state = store.getState();\n\t    var dispatch = store.dispatch;\n\t    f(state, dispatch);\n\t  });\n\t};\n\t\n\t/**\n\t * requires email verification before transitioning from AUTHENTICATED\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar emailVerificationRequired = function emailVerificationRequired(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    (function () {\n\t      var user = state.cognito.user;\n\t      (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n\t        if (attributes.email_verified !== 'true') {\n\t          (0, _auth.emailVerificationFlow)(user, attributes).then(dispatch);\n\t        } else {\n\t          dispatch(_actions.Action.loggingIn(attributes));\n\t        }\n\t      });\n\t    })();\n\t  }\n\t};\n\t\n\t/**\n\t * fetches and stores attributes before transitioning from AUTHENTICATED\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar fetchAttributes = function fetchAttributes(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    var user = state.cognito.user;\n\t    (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n\t      dispatch(_actions.Action.loggingIn(attributes));\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * transitions directly from AUTHENTICATED to LOGGING_IN\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar direct = function direct(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    dispatch(_actions.Action.loggingIn());\n\t  }\n\t};\n\t\n\t/**\n\t * logs into the single federated identity pool to transition from LOGGING_IN\n\t * to LOGGED_IN\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar identityPoolLogin = function identityPoolLogin(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.LOGGING_IN) {\n\t    (0, _auth.performLogin)(state.cognito.user, state.cognito.config).then(dispatch);\n\t  }\n\t};\n\t\n\t/**\n\t * sets up react-cognito with default policies.\n\t*/\n\tvar setupCognito = function setupCognito(store, config) {\n\t  store.dispatch(_actions.Action.configure(config));\n\t  enable(store, emailVerificationRequired);\n\t  enable(store, identityPoolLogin);\n\t};\n\t\n\texports.setupCognito = setupCognito;\n\texports.enable = enable;\n\texports.direct = direct;\n\texports.fetchAttributes = fetchAttributes;\n\texports.emailVerificationRequired = emailVerificationRequired;\n\texports.identityPoolLogin = identityPoolLogin;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cognito = undefined;\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\t/* global AWSCognito */\n\t\n\tvar initial = {\n\t  user: null,\n\t  state: _states.CognitoState.LOGGED_OUT,\n\t  error: '',\n\t  userPool: null,\n\t  attributes: {},\n\t  creds: null,\n\t  config: {\n\t    region: null,\n\t    userPool: null,\n\t    clientId: null,\n\t    identityPool: null\n\t  }\n\t};\n\t\n\tvar configure = function configure(state, action) {\n\t  // surprise side-effect!\n\t  AWSCognito.config.region = action.config.region;\n\t  var pool = new _amazonCognitoIdentityJs.CognitoUserPool({\n\t    UserPoolId: action.config.userPool,\n\t    ClientId: action.config.clientId\n\t  });\n\t  var user = pool.getCurrentUser();\n\t  return Object.assign({}, state, {\n\t    config: action.config,\n\t    userPool: pool,\n\t    user: user\n\t  });\n\t};\n\t\n\t// sometimes we don't get the attributes in later parts of the login flow\n\t// but lets not clobber the ones we've got if we've not got them\n\tvar addAttributes = function addAttributes(s, attributes) {\n\t  var s2 = Object.assign({}, s);\n\t  if (attributes) {\n\t    s2.attributes = attributes;\n\t  }\n\t  return s2;\n\t};\n\t\n\t/**\n\t * reducer function to be passed to redux combineReducers\n\t * @param {object} state\n\t * @param {object} action\n\t*/\n\t\n\tvar cognito = exports.cognito = function cognito() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n\t  var action = arguments[1];\n\t\n\t  switch (action.type) {\n\t\n\t    case 'COGNITO_CONFIGURE':\n\t      return configure(state, action);\n\t\n\t    case 'COGNITO_AUTHENTICATED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        error: '',\n\t        state: _states.CognitoState.AUTHENTICATED\n\t      });\n\t\n\t    case 'COGNITO_LOGGING_IN':\n\t      return Object.assign({}, state, {\n\t        state: _states.CognitoState.LOGGING_IN,\n\t        attributes: action.attributes\n\t      });\n\t\n\t    case 'COGNITO_LOGIN':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: '',\n\t        creds: action.creds,\n\t        state: _states.CognitoState.LOGGED_IN\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_LOGOUT':\n\t      return Object.assign({}, state, {\n\t        user: null,\n\t        error: '',\n\t        creds: null,\n\t        state: _states.CognitoState.LOGGED_OUT\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_FAILURE':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.LOGGED_OUT,\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_MFA_REQUIRED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        error: '',\n\t        state: _states.CognitoState.MFA_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        error: '',\n\t        state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_USER_UNCONFIRMED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.CONFIRMATION_REQUIRED,\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_USER_CONFIRM_FAILED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.CONFIRMATION_REQUIRED,\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n\t      return Object.assign({}, state, {\n\t        error: action.error,\n\t        state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: '',\n\t        state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: action.error,\n\t        state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n\t      return Object.assign({}, state, {\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n\t      return Object.assign({}, state, {\n\t        error: action.error\n\t      });\n\t\n\t    // this moves us into the AUTHENTICATED state, potentially causing\n\t    // a number of side-effects. this is so we can re-verify the email\n\t    // address if we have to\n\t    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n\t      return Object.assign({}, state, {\n\t        attributes: Object.assign({}, state.attributes, action.attributes),\n\t        state: _states.CognitoState.AUTHENTICATED\n\t      });\n\t\n\t    default:\n\t      return state;\n\t  }\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// react-cognito.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed368c1ea57fbe75960e","export * from './reducers';\nexport * from './actions';\nexport * from './states';\nexport * from './utils';\nexport * from './guard';\nexport * from './auth';\nexport * from './attributes';\nexport * from './policy';\n\n\nexport * from './Login.jsx';\nexport * from './Logout.jsx';\nexport * from './NewPasswordRequired.jsx';\nexport * from './EmailVerification.jsx';\nexport * from './PasswordReset.jsx';\nexport * from './Confirm.jsx';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * container for all the actions\n*/\nconst Action = {\n\n  configure: config => ({\n    type: 'COGNITO_CONFIGURE',\n    config,\n  }),\n\n  authenticated: user => ({\n    type: 'COGNITO_AUTHENTICATED',\n    user,\n  }),\n\n  loggingIn: attributes => ({\n    type: 'COGNITO_LOGGING_IN',\n    attributes,\n  }),\n\n  login: creds => ({\n    type: 'COGNITO_LOGIN',\n    creds,\n  }),\n\n  logout: () => ({\n    type: 'COGNITO_LOGOUT',\n  }),\n\n  loginFailure: (user, error) => ({\n    type: 'COGNITO_LOGIN_FAILURE',\n    user,\n    error,\n  }),\n\n  mfaRequired: user => ({\n    type: 'COGNITO_LOGIN_MFA_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequired: user => ({\n    type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequiredFailure: (user, error) => ({\n    type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n    user,\n    error,\n  }),\n\n  emailVerificationRequired: attributes => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n    attributes,\n  }),\n\n  emailVerificationFailed: (user, error) => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n    user,\n    error,\n  }),\n\n  beginPasswordResetFlow: (user, error) => ({\n    type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n    user,\n    error,\n  }),\n\n  finishPasswordResetFlow: error => ({\n    type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n    error,\n  }),\n\n  updateAttributes: attributes => ({\n    type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n    attributes,\n  }),\n\n  confirmationRequired: (user, error) => ({\n    type: 'COGNITO_USER_UNCONFIRMED',\n    user,\n    error,\n  }),\n\n  confirmFailed: (user, error) => ({\n    type: 'COGNITO_USER_CONFIRM_FAILED',\n    user,\n    error,\n  }),\n};\n\nexport { Action };\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}\n// module id = 3\n// module chunks = 0","\nimport { Action } from './actions';\n\n/**\n * Request that a verification code is sent by email or SMS to verify\n * an attribute\n * @param {object} user - the cognito user object\n * @param {string} attribute - the attribute name\n*/\nconst sendAttributeVerificationCode = (user, attribute) =>\n  new Promise((resolve, reject) => {\n    user.getAttributeVerificationCode(attribute, {\n      onSuccess: () => resolve(false),\n      inputVerificationCode: () => resolve(true),\n      onFailure: error => reject(error.message),\n    });\n  });\n\n/**\n * Fetches the user attributes from Cognito, and turns them into\n * an object\n * @param {object} user - the cognito user object\n * @returns {Promise} resolves with the attributes or rejects with an error message\n*/\nconst getUserAttributes = user =>\n  new Promise((resolve, reject) =>\n    user.getUserAttributes((error, result) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        const attributes = {};\n        for (let i = 0; i < result.length; i += 1) {\n          const name = result[i].getName();\n          const value = result[i].getValue();\n          attributes[name] = value;\n        }\n        resolve(attributes);\n      }\n    }),\n  );\n\n/**\n * convert an attribute dictionary to an attribute list\n * @param {object} attributes - a dictionary of attributes\n * @return {array} AWS expected attribute list\n*/\nconst mkAttrList = attributes =>\n  Object.keys(attributes).map(key => ({\n    Name: key,\n    Value: attributes[key],\n  }));\n\n/**\n * update the attributes in Cognito\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - an attributes dictionary with the attributes to be updated\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst updateAttributes = (user, attributes) =>\n  new Promise((resolve, reject) => {\n    const attributeList = mkAttrList(attributes);\n    user.updateAttributes(attributeList, (err) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(Action.updateAttributes(attributes));\n      }\n    });\n  });\n\nexport {\n  sendAttributeVerificationCode,\n  getUserAttributes,\n  updateAttributes,\n  mkAttrList,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/attributes.js","import { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials } from 'aws-cognito-sdk';\nimport { Action } from './actions';\nimport { mkAttrList, sendAttributeVerificationCode } from './attributes';\nimport { buildLogins } from './utils';\n\n/**\n * sends the email verification code and transitions to the correct state\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - the attributes dictionary\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst emailVerificationFlow = (user, attributes) =>\n  new Promise(resolve =>\n    sendAttributeVerificationCode(user, 'email').then((required) => {\n      if (required) {\n        resolve(Action.emailVerificationRequired(attributes));\n      } else {\n        // dead end?\n        resolve(Action.loggingIn(attributes));\n      }\n    }, (error) => {\n      // some odd classes of error here\n      resolve(Action.emailVerificationFailed(error, attributes));\n    }));\n\n/**\n * logs in to the federated identity pool with a JWT\n * @param {string} username - the username\n * @param {string} jwtToken - a token from the session\n * @param {object} config - the react-cognito config\n * @return {Promise<object>} a promise that resolves to the federated identity credentials\n*/\nconst refreshIdentityCredentials = (username, jwtToken, config) =>\n  new Promise((resolve, reject) => {\n    const logins = buildLogins(username, jwtToken, config);\n    const creds = new CognitoIdentityCredentials(logins);\n    creds.refresh((error) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        resolve(creds);\n      }\n    });\n  });\n\n/**\n * establishes a session with the user pool, and logs into the federated identity\n * pool using a token from the session\n * @param {object} user - the CognitoUser object\n * @param {object} config -the react-cognito config\n * @return {Promise<object>} an action to be dispatched\n*/\nconst performLogin = (user, config) =>\n  new Promise((resolve, reject) => {\n    if (user != null) {\n      user.getSession((err, session) => {\n        if (err) {\n          resolve(Action.loginFailure(user, err.message));\n        } else {\n          const jwtToken = session.getIdToken().getJwtToken();\n          const username = user.getUsername();\n          refreshIdentityCredentials(username, jwtToken, config).then(\n            creds => resolve(Action.login(creds)),\n            message => resolve(Action.loginFailure(user, message)));\n        }\n      });\n    } else {\n      reject('user is null');\n    }\n  });\n\n/**\n *\n * Authenticates with a user pool, and handles responses.\n * if the authentication is successful it then logs in to the\n * identity pool.\n *\n * returns an action depending on the outcome.  Possible actions returned\n * are:\n *\n * - login - valid user who is logged in\n * - loginFailure - failed to authenticate with user pool or identity pool\n * - mfaRequired - user now needs to enter MFA\n * - newPasswordRequired - user must change password on first login\n * - emailVerificationRequired - user must verify their email address\n * - emailVerificationFailed - email verification is required, but won't work\n *\n * Dispatch the resulting action, e.g.:\n *\n * ```\n * const { userPool, config } = state.cognito;\n * authenticate(username, password, userPool, config).then(dispatch);\n * ```\n *\n * @param {string} username - the username provided by the user\n * @param {string} password - the password provided by the user\n * @param {object} userPool - a Cognito User Pool object\n * @return {Promise<object>} - a promise that resolves an action to be dispatched\n *\n*/\nconst authenticate = (username, password, userPool) =>\n  new Promise((resolve) => {\n    const creds = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n    });\n\n    const user = new CognitoUser({\n      Username: username,\n      Pool: userPool,\n    });\n\n    user.authenticateUser(creds, {\n      onSuccess: () => resolve(Action.authenticated(user)),\n      onFailure: (error) => {\n        if (error.code === 'UserNotConfirmedException') {\n          resolve(Action.confirmationRequired(user));\n        } else {\n          resolve(Action.loginFailure(user, error.message));\n        }\n      },\n      mfaRequired: () => resolve(Action.mfaRequired(user)),\n      newPasswordRequired: () => resolve(Action.newPasswordRequired(user)),\n    });\n  });\n\n/**\n * sign up this user with the user pool provided\n * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n * @param {object} config - the react-cognito config object\n * @param {string} username - the username\n * @param {string} password - the password\n * @param {object} attributes - an attributes dictionary\n * @return {Promise<object>} a promise that resolves a redux action\n*/\nconst registerUser = (userPool, config, username, password, attributes) =>\n  new Promise((resolve, reject) =>\n    userPool.signUp(username, password, mkAttrList(attributes), null, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else if (result.userConfirmed === false) {\n        resolve(Action.confirmationRequired(result.user));\n      } else {\n        resolve(authenticate(username, password, userPool));\n      }\n    }));\n\n\nexport {\n  authenticate,\n  performLogin,\n  registerUser,\n  emailVerificationFlow,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","\n/** states stored in store.cognito.state */\nexport const CognitoState = {\n  LOGGED_OUT: 'LOGGED_OUT',\n  AUTHENTICATED: 'AUTHENTICATED',\n  LOGGING_IN: 'LOGGING_IN',\n  LOGGED_IN: 'LOGGED_IN',\n  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n  MFA_REQUIRED: 'MFA_REQUIRED',\n  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED',\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/states.js","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}\n// module id = 7\n// module chunks = 0","\n/**\n * Change a user's password\n * @param {object} user - the cognito user object\n * @param {string} oldPassword - the current password\n * @param {string} newPassword - the new password\n*/\nconst changePassword = (user, oldPassword, newPassword) =>\n  new Promise((resolve, reject) =>\n    user.changePassword(oldPassword, newPassword, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(result);\n      }\n    }));\n\n/**\n * builds the federated identity pool login structure\n * @param {string} username - the username of the user\n * @param {string} jwtToken - a JWT Token from the session\n * @param {object} config - the cognito react config object\n*/\nconst buildLogins = (username, jwtToken, config) => {\n  const loginDomain = `cognito-idp.${config.region}.amazonaws.com`;\n  const loginUrl = `${loginDomain}/${config.userPool}`;\n  const creds = {\n    IdentityPoolId: config.identityPool,\n    Logins: {},\n    LoginId: username, // https://github.com/aws/aws-sdk-js/issues/609\n  };\n  creds.Logins[loginUrl] = jwtToken;\n  return creds;\n};\n\nexport {\n  changePassword,\n  buildLogins,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseConfirm = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onResend: props.onResend,\n    onCancel: props.onCancel,\n  });\n\nconst confirm = (verificationCode, user, dispatch) => {\n  user.confirmRegistration(verificationCode, true, (error) => {\n    if (error) {\n      dispatch(Action.confirmFailed(user, error.message));\n    } else {\n      dispatch(Action.logout());\n    }\n  });\n};\n\nconst resend = (user, dispatch) =>\n  user.resendConfirmationCode((err) => {\n    if (err) {\n      dispatch(Action.confirmationRequired(user, err.message));\n    } else {\n      dispatch(Action.confirmationRequired(user, 'Confirmation code resent'));\n    }\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  confirmPartial: (verificationCode, user) =>\n    confirm(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n  onResendPartial: user => resend(user, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.confirmPartial(verificationCode, stateProps.user),\n    onResend: () =>\n     dispatchProps.onResendPartial(stateProps.user),\n  });\n\n/**\n * Container for a confirmation form.  Magically adds the following props to the \n * contained form:\n *\n *  * user - the Cognito User from the redux store\n *  * error - the persisted error from the redux store\n *  * onSubmit - a handler that calls the Cognito confirm API\n *  * onResend - a handler that calls the Cognito resend request API\n *  * onCancel - Logs the user out completely\n *\n * @example\n * <Confirm>\n *   <ConfirmForm />\n * </Confirm>\n *\n */\nexport const Confirm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseConfirm);\n\n\n\n// WEBPACK FOOTER //\n// ./src/Confirm.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseEmailVerification = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onCancel: props.onCancel,\n  });\n\nexport const verifyEmail = (verificationCode, user, dispatch) =>\n  new Promise((resolve, reject) => {\n    user.verifyAttribute('email', verificationCode, {\n      onSuccess: () => {\n        dispatch(Action.login(user));\n        resolve();\n      },\n      inputVerificationCode: () => {\n        dispatch(Action.emailVerificationRequired(user));\n        reject();\n      },\n      onFailure: (error) => {\n        dispatch(Action.emailVerificationFailed(user, error.message));\n        reject();\n      },\n    });\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  verifyPartial: (verificationCode, user) =>\n    verifyEmail(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.verifyPartial(verificationCode, stateProps.user),\n  });\n\n/**\n * Wrapper for an Email Verification Form.\n * Magically adds the following props to the contained form:\n *\n *  * user - the Cognito user from the Redux store\n *  * error - the persisted error from the Redux store\n *  * onSubmit - a handler that calls the Cognito verification API\n *\n * @example\n * <EmailVerification>\n *   <EmailVerificationForm />\n * </EmailVerification>\n *\n */\nexport const EmailVerification = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseEmailVerification);\n\n\n\n// WEBPACK FOOTER //\n// ./src/EmailVerification.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate } from './auth';\n\nconst BaseLogin = props =>\n  React.cloneElement(props.children, {\n    username: props.username,\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst mapStateToProps = (state) => {\n  let username = '';\n  if (state.cognito.user) {\n    username = state.cognito.user.getUsername();\n  }\n  return {\n    username,\n    error: state.cognito.error,\n    config: state.cognito.config,\n    userPool: state.cognito.userPool,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authenticator: (username, password, userPool, config) =>\n    authenticate(username, password, userPool, config).then(dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (username, password) =>\n      dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config),\n  });\n\n/**\n * Container for login behaviour, wrapping a login form.\n *\n * Magically provides the following props to the wrapped form:\n *\n *  * username\n *  * error\n *  * onSubmit\n *\n * @example\n * <Login>\n *   <LoginForm />\n * </Login>\n */\nconst Login = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseLogin);\n\nexport { Login };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Login.jsx","import React, { PropTypes } from 'react';\nimport { Action } from './actions';\n\n/**\n * Container for logout behaviour.\n * @example\n * <Logout onLogout={handler}>\n *   <LogoutForm />\n * </Logout>\n */\nexport class Logout extends React.Component {\n\n  /**\n   * Passed to child element as onClick prop.\n   * Signs the user out, and then dispatches the logout action\n   * If you want to take further actions (like reloading UI) then add an\n   * onLogout property to the Logout element\n   */\n  onClick = (event) => {\n    const { store } = this.context;\n    const state = store.getState();\n    state.cognito.user.signOut();\n    event.preventDefault();\n    store.dispatch(Action.logout());\n    this.props.onLogout();\n  }\n\n  /**\n   * renders the child element, adding an onClick property\n   */\n  render() {\n    return React.cloneElement(this.props.children, {\n      onClick: this.onClick,\n    });\n  }\n}\nLogout.contextTypes = {\n  store: PropTypes.object,\n};\nLogout.propTypes = {\n  children: React.PropTypes.any.isRequired,\n  onLogout: React.PropTypes.func,\n};\nLogout.defaultProps = {\n  onLogout: () => {},\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Logout.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseNewPasswordRequired = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst setNewPassword = (password, user, config, userAttributes, dispatch) =>\n  user.completeNewPasswordChallenge(password, userAttributes, {\n    onSuccess: () => dispatch(Action.authenticated(user)),\n    onFailure: error => dispatch(Action.newPasswordRequiredFailure(user, error.message)),\n    mfaRequired: () => dispatch(Action.mfaRequired(user)),\n    newPasswordRequired: () => dispatch(Action.newPasswordRequired(user)),\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n  config: state.cognito.config,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNewPasswordPartial: (password, user, config, userAttributes) =>\n    setNewPassword(password, user, config, userAttributes, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (password, userAttributes) =>\n     dispatchProps.setNewPasswordPartial(\n      password,\n      stateProps.user,\n      stateProps.config,\n      userAttributes),\n  });\n\n/**\n * Wrapper for a New Password Required form\n *\n * Magically provides the following props to the wrapped element:\n *\n * * user - the Cognito user\n * * error - the persistent react-cognito error message\n * * onSubmit - a handler that calls the Set New Password API\n *\n * @example\n *\n * <NewPasswordRequired>\n *   <NewPasswordRequiredForm />\n * </NewPasswordRequired>\n */\nexport const NewPasswordRequired = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseNewPasswordRequired);\n\n\n\n// WEBPACK FOOTER //\n// ./src/NewPasswordRequired.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Action } from './actions';\n\nconst BasePasswordReset = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    username: props.username,\n    sendVerificationCode: props.sendVerificationCode,\n    setPassword: props.setPassword,\n  });\n\nconst getUser = (username, userPool) => {\n  const user = new CognitoUser({\n    Username: username,\n    Pool: userPool,\n  });\n  return user;\n};\n\nconst setPassword = (username, userPool, code, password) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.confirmPassword(code, password, {\n      onSuccess: () => resolve(Action.finishPasswordResetFlow('Password reset')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst sendVerificationCode = (username, userPool) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.forgotPassword({\n      onSuccess: () => resolve(Action.beginPasswordResetFlow(user, 'Verification code sent')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst mapStateToProps = (state) => {\n  const props = {\n    error: state.cognito.error || '',\n    user: state.cognito.user,\n    username: '',\n    userPool: state.cognito.userPool,\n  };\n  if (state.cognito.user != null) {\n    props.username = state.cognito.user.getUsername();\n  }\n  return props;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  sendVerificationCodePartial: (username, userPool) => {\n    sendVerificationCode(username, userPool).then(dispatch);\n  },\n  setPasswordPartial: (user, userPool, code, password) => {\n    setPassword(user, userPool, code, password).then(dispatch);\n  },\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    sendVerificationCode: username =>\n      dispatchProps.sendVerificationCodePartial(username, stateProps.userPool),\n    setPassword: (username, code, password) =>\n      dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password),\n  });\n\n/**\n * Container for a Password Reset form\n *\n * Magically provides the following props to the wrapped element:\n *\n *  * user\n *  * username\n *  * error\n *  * sendVerificationCode\n *  * setPassword\n *\n * @example\n * <PasswordReset>\n *   <PasswordResetForm />\n * </PasswordReset>\n */\nexport const PasswordReset = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BasePasswordReset);\n\n\n\n// WEBPACK FOOTER //\n// ./src/PasswordReset.jsx","\n/*\n Default behaviour is to restrict access to only logged in users\n*/\n\nconst testLoggedIn = (state, wantLoggedIn) => {\n  const isLoggedIn = state.cognito.user !== null;\n  if (isLoggedIn && wantLoggedIn) {\n    return true;\n  }\n  if (!isLoggedIn && !wantLoggedIn) {\n    return true;\n  }\n  return false;\n};\n\nconst permitted = (state, expr) =>\n  new Promise((resolve) => {\n    if (expr.loggedIn !== undefined) {\n      resolve(testLoggedIn(state, expr.loggedIn));\n    } else {\n      resolve(testLoggedIn(state, true));\n    }\n  });\n\nconst guard = (store, forbiddenUrl, expr = {}, routeState, replace, callback) => {\n  const state = store.getState();\n  let dest = forbiddenUrl;\n\n  if (expr.forbiddenUrl !== undefined) {\n    dest = expr.forbiddenUrl;\n  }\n  permitted(state, expr).then((allow) => {\n    if (!allow) {\n      replace(dest);\n    }\n    callback();\n  });\n};\n\n/**\n * creates a guard function you can use in <Route> tags\n * @param {object} store - the redux store\n * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n * @returns {function} - a function that can be provided to onEnter\n*/\nconst createGuard = (store, forbiddenUrl) => expr => (state, replace, callback) =>\n  guard(store, forbiddenUrl, expr, state, replace, callback);\n\n\nexport { createGuard };\n\n\n\n// WEBPACK FOOTER //\n// ./src/guard.js","import { Action } from './actions';\nimport { getUserAttributes } from './attributes';\nimport { emailVerificationFlow, performLogin } from './auth';\nimport { CognitoState } from './states';\n\n/**\n * subscribes a \"policy\" function to the store, and calls it\n * with the state and the dispatch function\n * @param {object} store - the redux store\n * @param {function} f - f(state, dispatch)\n*/\nconst enable = (store, f) => {\n  store.subscribe(() => {\n    const state = store.getState();\n    const dispatch = store.dispatch;\n    f(state, dispatch);\n  });\n};\n\n/**\n * requires email verification before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst emailVerificationRequired = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      if (attributes.email_verified !== 'true') {\n        emailVerificationFlow(user, attributes).then(dispatch);\n      } else {\n        dispatch(Action.loggingIn(attributes));\n      }\n    });\n  }\n};\n\n/**\n * fetches and stores attributes before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst fetchAttributes = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      dispatch(Action.loggingIn(attributes));\n    });\n  }\n};\n\n/**\n * transitions directly from AUTHENTICATED to LOGGING_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst direct = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    dispatch(Action.loggingIn());\n  }\n};\n\n/**\n * logs into the single federated identity pool to transition from LOGGING_IN\n * to LOGGED_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst identityPoolLogin = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.LOGGING_IN) {\n    performLogin(state.cognito.user, state.cognito.config).then(dispatch);\n  }\n};\n\n/**\n * sets up react-cognito with default policies.\n*/\nconst setupCognito = (store, config) => {\n  store.dispatch(Action.configure(config));\n  enable(store, emailVerificationRequired);\n  enable(store, identityPoolLogin);\n};\n\nexport {\n  setupCognito,\n  enable,\n  direct,\n  fetchAttributes,\n  emailVerificationRequired,\n  identityPoolLogin,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/policy.js","import { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport { CognitoState } from './states';\n\n/* global AWSCognito */\n\nconst initial = {\n  user: null,\n  state: CognitoState.LOGGED_OUT,\n  error: '',\n  userPool: null,\n  attributes: {},\n  creds: null,\n  config: {\n    region: null,\n    userPool: null,\n    clientId: null,\n    identityPool: null,\n  },\n};\n\nconst configure = (state, action) => {\n  // surprise side-effect!\n  AWSCognito.config.region = action.config.region;\n  const pool = new CognitoUserPool({\n    UserPoolId: action.config.userPool,\n    ClientId: action.config.clientId,\n  });\n  const user = pool.getCurrentUser();\n  return Object.assign({}, state, {\n    config: action.config,\n    userPool: pool,\n    user,\n  });\n};\n\n// sometimes we don't get the attributes in later parts of the login flow\n// but lets not clobber the ones we've got if we've not got them\nconst addAttributes = (s, attributes) => {\n  const s2 = Object.assign({}, s);\n  if (attributes) {\n    s2.attributes = attributes;\n  }\n  return s2;\n};\n\n/**\n * reducer function to be passed to redux combineReducers\n * @param {object} state\n * @param {object} action\n*/\n\nexport const cognito = (state = initial, action) => {\n  switch (action.type) {\n\n    case 'COGNITO_CONFIGURE':\n      return configure(state, action);\n\n    case 'COGNITO_AUTHENTICATED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    case 'COGNITO_LOGGING_IN':\n      return Object.assign({}, state, {\n        state: CognitoState.LOGGING_IN,\n        attributes: action.attributes,\n      });\n\n    case 'COGNITO_LOGIN':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        creds: action.creds,\n        state: CognitoState.LOGGED_IN,\n      }, action.attributes));\n\n    case 'COGNITO_LOGOUT':\n      return Object.assign({}, state, {\n        user: null,\n        error: '',\n        creds: null,\n        state: CognitoState.LOGGED_OUT,\n      });\n\n    case 'COGNITO_LOGIN_FAILURE':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.LOGGED_OUT,\n        error: action.error,\n      });\n\n    case 'COGNITO_LOGIN_MFA_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.MFA_REQUIRED,\n      });\n\n    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_USER_UNCONFIRMED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        error: action.error,\n      });\n\n    case 'COGNITO_USER_CONFIRM_FAILED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        error: action.error,\n      });\n\n    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n      return Object.assign({}, state, {\n        error: action.error,\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n      return Object.assign({}, state, addAttributes({\n        error: action.error,\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    // this moves us into the AUTHENTICATED state, potentially causing\n    // a number of side-effects. this is so we can re-verify the email\n    // address if we have to\n    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n      return Object.assign({}, state, {\n        attributes: Object.assign({}, state.attributes, action.attributes),\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"AWSCognito\",\"commonjs\":\"aws-cognito-sdk\",\"commonjs2\":\"aws-cognito-sdk\",\"amd\":\"aws-cognito-sdk\"}\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}